{"ts":1339985171631,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fbId;              // provided by facebook          \nvar fbSecret;          // provided by facebook\nvar port;\nvar cookieSecret = \"cook\";     // enter a random hash for security\n\nvar express= require('express');\nvar everyauth= require('everyauth');\nvar MongoStore = require('connect-mongo')(express);\n\nvar mongooseDb = require('./mongooseDb');\nvar mongooseLogic = require('./mongooseLogic');\nvar app = express.createServer();\nvar Promise = everyauth.Promise;\n\n//Import database models\nUser = mongooseDb.User;\nGeneralReference = mongooseDb.GeneralReference;\nPermission = mongooseDb.Permission;\nPersonnaReference = mongooseDb.PersonnaReference;\nNotificationsReference = mongooseDb.NotificationsReference;\nNotification = mongooseDb.Notification;\nLog = mongooseDb.Log;\nParcourReference = mongooseDb.ParcourReference;\nParcour = mongooseDb.Parcour;\nCalendarEventReference = mongooseDb.CalendarEventReference;\nCalendarMonth = mongooseDb.CalendarMonth;\nCalendarEvent = mongooseDb.CalendarEvent;\nCardioWorkout = mongooseDb.CardioWorkout;\nCardioResult = mongooseDb.CardioResult;\nBasicCell = mongooseDb.BasicCell;\nIntervallUnit = mongooseDb.IntervallUnit;\nSingleIntervallResult = mongooseDb.SingleIntervallResult;\nCellReference = mongooseDb.CellReference; \nCellDetails = mongooseDb.CellDetails; \n\n\n//Facebook setting\nif(mongooseDb.env === \"dev\"){\n    console.log(\"In dev mode\");\n    fbId= \"277924085557007\";              // provided by facebook          \n    fbSecret= \"6a4c2dbefa84c7ba0d824ef981a2157f\";          // provided by facebook\n    port = process.env.C9_PORT;\n}\nelse{\n    console.log(\"In prod mode\");\n    fbId= \"114525048657436\";              // provided by facebook          \n    fbSecret= \"03a45bd3d6c6ed6c9aecd5abc260966d\";          // provided by facebook \n    port = 80;\n}\n\n\neveryauth.helpExpress(app);\n\neveryauth.facebook\n  .appId(fbId)\n  .appSecret(fbSecret)\n  .logoutPath('/logout')\n  .logoutRedirectPath('/')\n  .moduleTimeout(20000) //To verify if this blocks the whole script\n  .scope('user_location')\n  .handleAuthCallbackError( function (req, res) {\n    //Define here for routing in case user decline app     \n  })\n  .findOrCreateUser( function (session, accessToken, accessTokExtra, fbUserMetadata) {\n    //Verifies if user in database already\n    var id = fbUserMetadata.id;\n    var promise = this.Promise();\n    //console.log(JSON.stringify(fbUserMetadata));\n    var userLocation = \"Not Available\";\n    //If the user has no location in its profile, then the location name will be unavailable\n    if(typeof(fbUserMetadata.location) !== 'undefined'){\n        userLocation = fbUserMetadata.location.name;\n    }\n    \n    User.findOne({ fbid: id}, function(err, user) {\n        if (err) return promise.fail(err);\n        if (user) return promise.fulfill(user);\n        User.create({ fbid: id, firstName: fbUserMetadata.first_name, lastName: fbUserMetadata.last_name, \n            location: {name: userLocation, latlng: {lat: 0, lng: 0}}, objective: \"Train socially and improve ! \",\n            color:{bike:\"#CCCCCC\", swim: \"#99CCFF\", run: \"#CC9966\", cell: \"#C24747\"}}, function (err, user) {\n            \n            if (err) return promise.fail(err);\n            promise.fulfill(user);\n            \n            GeneralReference.create({ id: id}, function(err, ref){\n               if (err) return promise.fail(err);   \n            }); \n            \n            CalendarEventReference.create({ id: id}, function(err, ref){\n               if (err) return promise.fail(err);   \n            }); \n            \n            NotificationsReference.create({ id: id, pendingSize: 0, unRead: 0}, function(err, ref){\n               if (err) return promise.fail(err);   \n            });\n            \n            CardioResult.create({ id: id}, function(err, ref){\n               if (err) return promise.fail(err);   \n            }); \n            \n        });\n    });\n    return promise;\n\n  })\n  //.redirectPath('/view/profile');\n  .redirectPath('/hasRights');\n\nconsole.log(\"configure - on port: \" + port);\napp.configure(function(){\n  app.use(express.static(__dirname + '/public'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser());\n  /*var session = express.session({\n      secret: cookieSecret,\n      store: new MemoryStore({ reapInterval: 60000 * 10 }),\n      key: \"workoutcelld.sid\"\n  });\n  app.use(session);*/\n  app.use(express.session({\n    secret: mongooseDb.conf.secret,\n    maxAge: new Date(Date.now() + 3600000),\n    store: new MongoStore(mongooseDb.conf.db)\n  }));\n  app.use(everyauth.middleware());\n  app.use(express.favicon());\n  app.use(express.errorHandler({ showStack: true, dumpExceptions: true }));\n\n});\n\nrequire('./routes')(app);\n\napp.get('/', function(req, res) {\n   //console.log(everyauth.facebook.routes + everyauth.facebook.configurable());  // FTW!\n   res.sendfile('./views/welcome.html');\n});\n\napp.post('/test', function (req, res) {\n    console.log(\"incoming test2\");\n    res.end(\"thanks\");\n});\n\n\napp.error(function(err, req, res){\n    console.log(err);\n});\n\napp.listen(port);"]],"start1":0,"start2":0,"length1":0,"length2":5056}]],"length":5056}
