{"ts":1339985438756,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n\nvar getStats = function(arrayObid, callback){\n    \n    $.ajax({\n        url: calculateMonthStats,\n        type: \"POST\",\n        dataType: \"json\",\n        data: JSON.stringify({array: arrayObid}),\n        contentType: \"application/json\",\n        cache: false,\n        timeout: 10000,\n        success: function(data) {      \n            callback(data);\n        }\n    });\n \n}\n\n\nvar getIdsFromEventSource = function(arrayOfEvents, callback){\n    \n    var response = {\n      \n      array: [],\n      timeBike: 0,\n      timeSwim: 0,\n      timeRun: 0,\n      timeCell:0\n        \n    };\n    \n    \n    for(i=0;i < arrayOfEvents.length;i++){\n    \n        (function(i){\n            response.array.push(arrayOfEvents[i].refWorkout);\n            \n            if(arrayOfEvents[i].title === \"Swim\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeSwim = response.timeSwim + (diff);\n                \n            }\n            else if(arrayOfEvents[i].title === \"Run\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeRun = response.timeRun + diff;\n            }\n            else if(arrayOfEvents[i].title === \"Bike\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeBike = response.timeBike + diff;\n            }\n            else{\n                \n            }\n            \n            if( arrayOfEvents[i].color === \"Swim\"=== \"#C24747\"){\n               var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000; \n                response.timeCell = response.timeCell + diff;\n            }\n            \n            if(i === (arrayOfEvents.length - 1)){\n                callback(response); \n            }\n            \n        })(i);\n    } \n}\n\nvar fillStatsPage = function(eventSource){\n \n \n    getIdsFromEventSource(eventSource, function(newArray){\n        console.log(newArray);\n        getStats(newArray.array, function(statsResult){\n                console.log(statsResult);\n                computeStats(statsResult, function(res){\n                    \n                    console.log(res);\n\n                    d3graph([res.plannedBikeDistanceSum, res.totalBikeDistanceSum, res.plannedSwimDistanceSum, res.totalSwimDistanceSum, res.plannedRunDistanceSum, res.totalRunDistanceSum],\n                        [\"-\", \"Planned Bike\", \"Total Completed\", \"Planned Swim\", \"Total Completed\", \"Planned Run\", \"Total Completed\"]);\n\n                    document.getElementById(\"timeStats\").innerHTML = 'Time biking: ' + newArray.timeBike.toString().toHHMMSS() + '<br>Time swimming: ' + newArray.timeSwim.toString().toHHMMSS() +\n                        '<br>Time running: ' + newArray.timeRun.toString().toHHMMSS() + '<br>Time socializing: ' + newArray.timeCell.toString().toHHMMSS();\n                        \n                    //document.getElementById(\"cellNFriendStats\").innerHTML = JSON.stringify(res.socialStats);\n                    \n                    displayTopFriends(res.socialObject);\n\n                });\n        });        \n    });\n}\n\nString.prototype.toHHMMSS = function () {\n    sec_numb    = parseInt(this);\n    var hours   = Math.floor(sec_numb / 3600);\n    var minutes = Math.floor((sec_numb - (hours * 3600)) / 60);\n    var seconds = sec_numb - (hours * 3600) - (minutes * 60);\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    var time    = hours+':'+minutes+':'+seconds;\n    return time;\n}\n\nvar d3graph = function(data, titles){\n\n    console.log(data);\n    document.getElementById(\"distanceGraph\").innerHTML = \"\";\n    \n    var chart = d3.select(\"#distanceGraph\").append(\"svg\")\n     .attr(\"class\", \"chart\")\n     .attr(\"width\", 510)\n     .attr(\"height\", 20 * data.length); \n    \n    var x = d3.scale.linear()\n     .domain([0, d3.max(data)])\n     .range([0, 350]); \n     \n    var x2 = d3.scale.linear()\n     .domain([0, d3.max(data)])\n     .range([30, 400]);\n    \n    chart.selectAll(\"rect\")\n     .data(data)\n    .enter().append(\"rect\")\n     .attr(\"y\", function(d, i) { return i * 20; })\n     .attr(\"width\", x)\n     .attr(\"x\", 80)\n     .attr(\"fill\", function(d, i){ return (i%2) ? \"#e2f1d5\" : \"#F0C4B1\"  })\n     .attr(\"height\", 20)\n\n    chart.selectAll(\"text\")\n     .data(data)\n    .enter().append(\"text\")\n     .attr(\"x\", x)\n     .attr(\"y\", function(d, i) { return (i * 20) + 10; })\n     .attr(\"dx\", 105) // padding-right\n     .attr(\"dy\", \".35em\") // vertical-align: middle\n     .attr(\"text-anchor\", \"end\") // text-align: right\n     .text(String);\n\n     \n     chart.selectAll(\"rule\")\n      .data(titles)\n     .enter().append(\"text\")\n      .attr(\"class\", \"rule\")\n      .attr(\"x\", x)\n      .attr(\"y\", function(d, i) { return i * 20; })\n      .attr(\"dy\", -3)\n      //.attr(\"text-anchor\", \"middle\")\n      .text(String);\n    \n}\n\n\n\nvar displayTopFriends = function(sortable){\n    \n    \n    var arrayOfUsers = [];\n        \n    for(var i in sortable){   \n        arrayOfUsers.push(sortable[i]);\n    }\n    \n    console.log(arrayOfUsers);\n    \n    arrayOfUsers.sort(dynamicSort(\"count\"));\n    \n\n    var overallHtml = \"<table width='100%'  style='border-collapse:collapse'>\";\n    \n    //Display max of 5 persons\n    for(i = 0; i < arrayOfUsers.length; i++){\n      var pictureTag = '<img style=\"padding-left:15px;\" src=\"http://graph.facebook.com/' + arrayOfUsers[i].fbid + '/picture\" />'; \n      var name  = \"<div style='font-size: 12px; float:left;'><div style='font-weight:bold'>\" + arrayOfUsers[i].name + \"</div><div>\";\n      var count = \"<div style='float: right; padding-right: 15px;'> Trained with \" +  arrayOfUsers[i].count +\" time</div>\";\n      overallHtml = overallHtml + '<tr class=\"intervallUnit\"><td>' + pictureTag + '</td><td valign=\"middle\">' + \n        '</td><td valign=\"middle\">' + name + '</td><td valign=\"middle\" width=\"99%\">' + count + '</td></tr>';\n        if(i === 5){\n            break;    \n        }\n    }\n\n    \n    document.getElementById('cellNFriendStats').innerHTML = overallHtml + '</table>';\n       \n    if(arrayOfUsers.length < 2){\n        document.getElementById('cellNFriendStats').innerHTML = \"You haven't trained with any friends this month.\"\n    }    \n    \n}\n\n\nvar computeStats = function(array, callback){\n    \n   console.log(array); \n    var stats = {\n        plannedRunDistance: [],\n        plannedSwimDistance: [],\n        plannedBikeDistance: [],\n        plannedCellDistance: [],\n        totalRunDistance: [],\n        totalSwimDistance: [],\n        totalBikeDistance: [],\n        totalCellDistance: [],\n        plannedRunDistanceSum: 0,\n        plannedSwimDistanceSum: 0,\n        plannedBikeDistanceSum: 0,\n        plannedCellDistanceSum: 0,\n        totalRunDistanceSum: 0,\n        totalSwimDistanceSum: 0,\n        totalBikeDistanceSum: 0,\n        totalCellDistanceSum: 0,\n        \n        plannedRunIntervall: 0,\n        plannedSwimIntervall: 0,\n        plannedBikeIntervall: 0,\n        plannedCellIntervall: 0,\n        totalRunIntervall: 0,\n        totalSwimIntervall: 0,\n        totalBikeIntervall: 0,\n        totalCellIntervall: 0,\n        \n        socialObject: {}\n\n  \n    }\n    \n    \n    for(i = 0; i < array.length; i++){\n       //console.log(i + \" - \" + array[i]);\n        (function(i){\n            if(array[i].workout.type === \"distance\"){\n                console.log(array[i].workout.sport + \" - \" + array[i].workout.distance.targetType);\n                if(array[i].workout.sport === \"Bike\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedBikeDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedBikeDistanceSum = stats.plannedBikeDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalBikeDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalBikeDistanceSum = stats.totalBikeDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalBikeDistance.push(array[i].result.value);\n                            stats.totalBikeDistanceSum = stats.totalBikeDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else if(array[i].workout.sport === \"Swim\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedSwimDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedSwimDistanceSum = stats.plannedSwimDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalSwimDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalSwimDistanceSum = stats.totalSwimDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalSwimDistance.push(array[i].result.value);\n                            stats.totalSwimDistanceSum = stats.totalSwimDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else if(array[i].workout.sport === \"Run\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedRunDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedRunDistanceSum = stats.plannedRunDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalRunDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalRunDistanceSum = stats.totalRunDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalRunDistance.push(array[i].result.value);\n                            stats.totalRunDistanceSum = stats.totalRunDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else{\n               \n                }\n               \n            }\n            else if(array[i].workout.type === \"intervall\"){\n               //getIntervallTotalValue(array[i].workout, array[i].result, array[i].workout.sport, stats)\n               \n            }\n            else{\n               \n            }\n            \n           \n                   \n           \n        })(i);\n        \n        (function(i){\n            \n             //Get social stats\n            if(array[i].workout.cell.participants.length !== 0){\n                var participantArray = array[i].workout.cell.participants;\n                for(i=0; i < participantArray.length; i++){\n\n                    (function(i){\n                        //if(participantArray[i].fbid.toString() !== authId){\n                            if(stats.socialObject[participantArray[i].fbid] == undefined){ stats.socialObject[participantArray[i].fbid] = { count: 0} };\n                            stats.socialObject[participantArray[i].fbid].count = stats.socialObject[participantArray[i].fbid].count + 1;\n                            stats.socialObject[participantArray[i].fbid].name = participantArray[i].fullName;\n                            stats.socialObject[participantArray[i].fbid].fbid = participantArray[i].fbid;\n                        //}\n                    })(i);\n                   \n                }\n               \n            }\n        })(i);\n        \n        \n       if(i === (array.length -1)){\n            //console.log('calling back');\n            callback(stats);    \n        }\n       \n    }\n\n}\n\n\n\nfunction dynamicSort(property) {\n    return function (a,b) {\n        return (a[property] > b[property]) ? -1 : (a[property] < b[property]) ? 1 : 0;\n    }\n}\n\n\n\nvar getIntervallTotalValue = function(anArray, resultArray, sport, stats){\n    \n    for(i=0;i < anArray.length; i++){\n        if(anArray[i].targetUnit === 'm'){\n            if(sport === 'Bike'){\n                stats.plannedBikeDistance =  stats.plannedBikeDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalBikeDistance = stats.totalBikeDistance + resultArray[i].value;\n                }\n            }\n            else if(sport === 'Swim'){\n                stats.plannedSwimDistance =  stats.plannedSwimDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalSwimDistance = stats.totalSwimDistance + resultArray[i].value;\n                }\n            }\n            else if(sport === 'Run'){\n                stats.plannedRunDistance =  stats.plannedRunDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalRunDistance = stats.totalRunDistance + resultArray[i].value;\n                }\n            }\n            else{\n                \n            }\n            \n        }\n        else if(anArray[i].targetUnit === 's' || anArray[i].targetUnit === 'min' ){\n            if(resultArray.result !== \"none\" || resultArray[i].completed){\n                if(sport === 'Bike'){\n                    stats.totalBikeDistance = stats.totalBikeDistance + resultArray[i].value;\n                }\n                else if(sport === 'Swim'){\n                    stats.totalSwimDistance = stats.totalSwimDistance + resultArray[i].value;\n                }\n                else if(sport === 'Run'){\n                    stats.totalRunDistance = stats.totalRunDistance + resultArray[i].value;\n                }\n                else{\n                    \n                }\n            }\n            \n        }\n        else{\n        \n        }  \n    }   \n}\n\n\n\nvar drawElevationGraph = function(data){\n    console.log(data);\n    \n    //var data = array.\n    \n    document.getElementById(\"elevationGraph\").innerHTML = \"\";\n    \n    var barWidth = 1;\n    var height = 75;\n    var width = 400;\n    var delta = d3.max(data) - d3.min(data) + 10; //10 is a basic padding\n    \n    var chart = d3.select(\"#elevationGraph\").append(\"svg\")\n     .attr(\"class\", \"chart\")\n     .attr(\"width\", 480)\n     .attr(\"height\", 85);\n    \n    var x = d3.scale.linear()\n     .domain([0, data.length]);\n\n     \n    var y = d3.scale.linear()\n     .domain([0 , d3.max(data)])\n     .range([10, height]);\n     \n    /* \n    chart.selectAll(\"rect\")\n     .data(data)\n    .enter().append(\"rect\")\n     .attr(\"y\", function(d){ return 75 - y(d);})\n     .attr(\"width\", 2)\n     .attr(\"x\", function(d, i) { return (i * 2) + 15; })\n     .attr(\"fill\", \"#84C74D\")\n     .attr(\"height\", function(d){ return y(d); })*/\n     \n    chart.selectAll(\"line\")\n     .data(data)\n    .enter().append(\"line\")\n     .attr(\"y1\", function(d){ return 75 - y(d);})\n     .attr(\"y2\", 75)\n     .attr(\"x1\", function(d, i) { return (i) + 15; })\n     .attr(\"x2\", function(d, i) { return (i) + 15; })\n     .style(\"stroke\", \"#84C74D\")\n     .on(\"mouseover\", function(d){  \n         $('#elevationGraph').qtip({\n\n             show: true\n         });\n      })\n\t .on(\"mouseout\", function(){\n         $('#elevationGraph').qtip({show: false });\n     });\n     \n    /* \n    chart.selectAll(\".rule\")\n     .data(y.ticks(2))\n    .enter().append(\"text\")\n     .attr(\"class\", \"rule\")\n     .attr(\"x\", 0)\n     .attr(\"y\", function(d){ return y(d) })\n     .attr(\"dx\", 6)\n     .attr(\"text-anchor\", \"middle\")\n     .text(function(d){ return d3.max(0) - d });\n     \n    chart.selectAll(\"line\")\n     .data(y.ticks(2))\n    .enter().append(\"line\")\n     .attr(\"x1\", 10)\n     .attr(\"x2\", 480)\n     .attr(\"y1\", y)\n     .attr(\"y2\", y)\n     .style(\"stroke\", \"#FFFFFF\");*/\n\n}\n\nvar elevationArrayToArray = function(elevationArray){\n\n    var toReturn = [];\n    for(i=0; i < elevationArray.length;i++){\n       toReturn.push(elevationArray[i].elevation); \n    }\n    return toReturn;\n    \n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":17208}]],"length":17208}
{"contributors":[],"silentsave":false,"ts":1340576554652,"patch":[[{"diffs":[[0,".qtip({\n"],[-1,"\n"],[0," "],[1,"           content: {\n    \t        text: d\n\t       },\n"],[0,"        "]],"start1":16351,"start2":16351,"length1":18,"length2":71}]],"length":17261,"saved":false}
{"ts":1340576588609,"patch":[[{"diffs":[[0,"  text: "],[-1,"d"],[1,"\"glglglgl\""],[0,"\n\t      "]],"start1":16393,"start2":16393,"length1":17,"length2":26}]],"length":17270,"saved":false}
{"ts":1340576841569,"patch":[[{"diffs":[[0,"    "],[-1,"content: {\n    \t        text: \"glglglgl\"\n\t       },"],[0,"\n   "]],"start1":16367,"start2":16367,"length1":59,"length2":8}]],"length":17219,"saved":false}
{"ts":1340577312049,"patch":[[{"diffs":[[0,"(d){  \n         "],[1,"\n         \n         /*"],[0,"$('#elevationGra"]],"start1":16315,"start2":16315,"length1":32,"length2":54},{"diffs":[[0,".qtip({\n"],[-1,""],[0,"        "]],"start1":16373,"start2":16373,"length1":16,"length2":16},{"diffs":[[0,"         });"],[1,"*/"],[0,"\n      })\n\t "]],"start1":16417,"start2":16417,"length1":24,"length2":26},{"diffs":[[0,"tion(){\n"],[-1,""],[0,"        "]],"start1":16463,"start2":16463,"length1":16,"length2":16},{"diffs":[[0,"        "],[1,"\n         \n         //"],[0,"$('#elev"]],"start1":16472,"start2":16472,"length1":16,"length2":38}]],"length":17265,"saved":false}
{"contributors":[],"silentsave":false,"ts":1340588770953,"patch":[[{"diffs":[[1,"\n\nvar getStats = function(arrayObid, callback){\n    \n    $.ajax({\n        url: calculateMonthStats,\n        type: \"POST\",\n        dataType: \"json\",\n        data: JSON.stringify({array: arrayObid}),\n        contentType: \"application/json\",\n        cache: false,\n        timeout: 10000,\n        success: function(data) {      \n            callback(data);\n        }\n    });\n \n}\n\n\nvar getIdsFromEventSource = function(arrayOfEvents, callback){\n    \n    var response = {\n      \n      //array: [],\n      timeBike: 0,\n      timeSwim: 0,\n      timeRun: 0,\n      timeCell:0\n        \n    };\n    response.array = new Array();\n    \n    for(i=0;i < arrayOfEvents.length;i++){\n    \n        (function(i){\n            response.array.push(arrayOfEvents[i].refWorkout);\n            \n            if(arrayOfEvents[i].title === \"Swim\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeSwim = response.timeSwim + (diff);\n                \n            }\n            else if(arrayOfEvents[i].title === \"Run\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeRun = response.timeRun + diff;\n            }\n            else if(arrayOfEvents[i].title === \"Bike\"){\n                var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000;\n                response.timeBike = response.timeBike + diff;\n            }\n            else{\n                \n            }\n            \n            if( arrayOfEvents[i].color === \"Swim\"=== \"#C24747\"){\n               var diff = Math.abs(arrayOfEvents[i].end - arrayOfEvents[i].start) / 1000; \n                response.timeCell = response.timeCell + diff;\n            }\n            \n            if(i === (arrayOfEvents.length - 1)){\n                callback(response); \n            }\n            \n        })(i);\n    } \n}\n\nvar fillStatsPage = function(eventSource){\n \n \n    getIdsFromEventSource(eventSource, function(newArray){\n        //console.log(newArray);\n        if(newArray.length === 0){\n            $('#friendTopTitle').text('No statistics for this month');\n        }\n        else{\n            getStats(newArray.array, function(statsResult){\n                //console.log(statsResult);\n                if(!statsResult.success || statsResult.length === 0){\n                     $('#friendTopTitle').text('No statistics for this month');\n                }\n                else{\n                    $('#friendTopTitle').text('Top training friends');\n                    computeStats(statsResult, function(res){\n                        d3graph([res.plannedBikeDistanceSum, res.totalBikeDistanceSum, res.plannedSwimDistanceSum, res.totalSwimDistanceSum, res.plannedRunDistanceSum, res.totalRunDistanceSum],\n                            [\"-\", \"Planned Bike\", \"Total Completed\", \"Planned Swim\", \"Total Completed\", \"Planned Run\", \"Total Completed\"]);\n   \n                        document.getElementById(\"timeStats\").innerHTML = 'Time biking: ' + newArray.timeBike.toString().toHHMMSS() + '<br>Time swimming: ' + newArray.timeSwim.toString().toHHMMSS() +\n                            '<br>Time running: ' + newArray.timeRun.toString().toHHMMSS() + '<br>Time socializing: ' + newArray.timeCell.toString().toHHMMSS();\n\n                        displayTopFriends(res.socialObject);\n                    });\n                }\n            }); \n        }\n    });\n}\n\nString.prototype.toHHMMSS = function () {\n    sec_numb    = parseInt(this);\n    var hours   = Math.floor(sec_numb / 3600);\n    var minutes = Math.floor((sec_numb - (hours * 3600)) / 60);\n    var seconds = sec_numb - (hours * 3600) - (minutes * 60);\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    var time    = hours+':'+minutes+':'+seconds;\n    return time;\n}\n\nvar d3graph = function(data, titles){\n\n    console.log(data);\n    document.getElementById(\"distanceGraph\").innerHTML = \"\";\n    \n    var chart = d3.select(\"#distanceGraph\").append(\"svg\")\n     .attr(\"class\", \"chart\")\n     .attr(\"width\", 510)\n     .attr(\"height\", 20 * data.length); \n    \n    var x = d3.scale.linear()\n     .domain([0, d3.max(data)])\n     .range([0, 350]); \n     \n    var x2 = d3.scale.linear()\n     .domain([0, d3.max(data)])\n     .range([30, 400]);\n    \n    chart.selectAll(\"rect\")\n     .data(data)\n    .enter().append(\"rect\")\n     .attr(\"y\", function(d, i) { return i * 20; })\n     .attr(\"width\", x)\n     .attr(\"x\", 80)\n     .attr(\"fill\", function(d, i){ return (i%2) ? \"#e2f1d5\" : \"#F0C4B1\"  })\n     .attr(\"height\", 20)\n\n    chart.selectAll(\"text\")\n     .data(data)\n    .enter().append(\"text\")\n     .attr(\"x\", x)\n     .attr(\"y\", function(d, i) { return (i * 20) + 10; })\n     .attr(\"dx\", 105) // padding-right\n     .attr(\"dy\", \".35em\") // vertical-align: middle\n     .attr(\"text-anchor\", \"end\") // text-align: right\n     .text(String);\n\n     \n     chart.selectAll(\"rule\")\n      .data(titles)\n     .enter().append(\"text\")\n      .attr(\"class\", \"rule\")\n      .attr(\"x\", x)\n      .attr(\"y\", function(d, i) { return i * 20; })\n      .attr(\"dy\", -3)\n      //.attr(\"text-anchor\", \"middle\")\n      .text(String);\n    \n}\n\n\n\nvar displayTopFriends = function(sortable){\n    \n    \n    var arrayOfUsers = [];\n        \n    for(var i in sortable){   \n        arrayOfUsers.push(sortable[i]);\n    }\n    \n    console.log(arrayOfUsers);\n    \n    arrayOfUsers.sort(dynamicSort(\"count\"));\n    \n\n    var overallHtml = \"<table width='100%'  style='border-collapse:collapse'>\";\n    \n    //Display max of 5 persons\n    for(i = 0; i < arrayOfUsers.length; i++){\n      var pictureTag = '<img style=\"padding-left:15px;\" src=\"http://graph.facebook.com/' + arrayOfUsers[i].fbid + '/picture\" />'; \n      var name  = \"<div style='font-size: 12px; float:left;'><div style='font-weight:bold'>\" + arrayOfUsers[i].name + \"</div><div>\";\n      var count = \"<div style='float: right; padding-right: 15px;'> Trained with \" +  arrayOfUsers[i].count +\" time</div>\";\n      overallHtml = overallHtml + '<tr class=\"intervallUnit\"><td>' + pictureTag + '</td><td valign=\"middle\">' + \n        '</td><td valign=\"middle\">' + name + '</td><td valign=\"middle\" width=\"99%\">' + count + '</td></tr>';\n        if(i === 5){\n            break;    \n        }\n    }\n\n    \n    document.getElementById('cellNFriendStats').innerHTML = overallHtml + '</table>';\n       \n    if(arrayOfUsers.length < 2){\n        document.getElementById('cellNFriendStats').innerHTML = \"You haven't trained with any friends this month.\"\n    }    \n    \n}\n\n\nvar computeStats = function(array, callback){\n    \n   console.log(array); \n    var stats = {\n        plannedRunDistance: [],\n        plannedSwimDistance: [],\n        plannedBikeDistance: [],\n        plannedCellDistance: [],\n        totalRunDistance: [],\n        totalSwimDistance: [],\n        totalBikeDistance: [],\n        totalCellDistance: [],\n        plannedRunDistanceSum: 0,\n        plannedSwimDistanceSum: 0,\n        plannedBikeDistanceSum: 0,\n        plannedCellDistanceSum: 0,\n        totalRunDistanceSum: 0,\n        totalSwimDistanceSum: 0,\n        totalBikeDistanceSum: 0,\n        totalCellDistanceSum: 0,\n        \n        plannedRunIntervall: 0,\n        plannedSwimIntervall: 0,\n        plannedBikeIntervall: 0,\n        plannedCellIntervall: 0,\n        totalRunIntervall: 0,\n        totalSwimIntervall: 0,\n        totalBikeIntervall: 0,\n        totalCellIntervall: 0,\n        \n        socialObject: {}\n\n  \n    }\n    \n    \n    for(i = 0; i < array.length; i++){\n       //console.log(i + \" - \" + array[i]);\n        (function(i){\n            if(array[i].workout.type === \"distance\"){\n                console.log(array[i].workout.sport + \" - \" + array[i].workout.distance.targetType);\n                if(array[i].workout.sport === \"Bike\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedBikeDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedBikeDistanceSum = stats.plannedBikeDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalBikeDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalBikeDistanceSum = stats.totalBikeDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalBikeDistance.push(array[i].result.value);\n                            stats.totalBikeDistanceSum = stats.totalBikeDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else if(array[i].workout.sport === \"Swim\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedSwimDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedSwimDistanceSum = stats.plannedSwimDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalSwimDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalSwimDistanceSum = stats.totalSwimDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalSwimDistance.push(array[i].result.value);\n                            stats.totalSwimDistanceSum = stats.totalSwimDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else if(array[i].workout.sport === \"Run\"){\n                    if(array[i].workout.distance.targetType === 'Kilometers'){\n                        stats.plannedRunDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                        stats.plannedRunDistanceSum = stats.plannedRunDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        if(array[i].result !== \"none\"){\n                            stats.totalRunDistance.push((array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue);\n                            stats.totalRunDistanceSum = stats.totalRunDistanceSum + (array[i].workout.distance.maxValue * 1000) +  array[i].workout.distance.minValue;\n                        }\n                    }\n                    else if(array[i].workout.distance.targetType === 'Time'){\n                        if(array[i].result !== \"none\"){\n                            stats.totalRunDistance.push(array[i].result.value);\n                            stats.totalRunDistanceSum = stats.totalRunDistanceSum + (array[i].result.value);\n                        }\n                    }\n                    else{}\n                }\n                else{\n               \n                }\n               \n            }\n            else if(array[i].workout.type === \"intervall\"){\n               //getIntervallTotalValue(array[i].workout, array[i].result, array[i].workout.sport, stats)\n               \n            }\n            else{\n               \n            }\n            \n           \n                   \n           \n        })(i);\n        \n        (function(i){\n            \n             //Get social stats\n            if(array[i].workout.cell.participants.length !== 0){\n                var participantArray = array[i].workout.cell.participants;\n                for(i=0; i < participantArray.length; i++){\n\n                    (function(i){\n                        //if(participantArray[i].fbid.toString() !== authId){\n                            if(stats.socialObject[participantArray[i].fbid] == undefined){ stats.socialObject[participantArray[i].fbid] = { count: 0} };\n                            stats.socialObject[participantArray[i].fbid].count = stats.socialObject[participantArray[i].fbid].count + 1;\n                            stats.socialObject[participantArray[i].fbid].name = participantArray[i].fullName;\n                            stats.socialObject[participantArray[i].fbid].fbid = participantArray[i].fbid;\n                        //}\n                    })(i);\n                   \n                }\n               \n            }\n        })(i);\n        \n        \n       if(i === (array.length -1)){\n            //console.log('calling back');\n            callback(stats);    \n        }\n       \n    }\n\n}\n\n\n\nfunction dynamicSort(property) {\n    return function (a,b) {\n        return (a[property] > b[property]) ? -1 : (a[property] < b[property]) ? 1 : 0;\n    }\n}\n\n\n\nvar getIntervallTotalValue = function(anArray, resultArray, sport, stats){\n    \n    for(i=0;i < anArray.length; i++){\n        if(anArray[i].targetUnit === 'm'){\n            if(sport === 'Bike'){\n                stats.plannedBikeDistance =  stats.plannedBikeDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalBikeDistance = stats.totalBikeDistance + resultArray[i].value;\n                }\n            }\n            else if(sport === 'Swim'){\n                stats.plannedSwimDistance =  stats.plannedSwimDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalSwimDistance = stats.totalSwimDistance + resultArray[i].value;\n                }\n            }\n            else if(sport === 'Run'){\n                stats.plannedRunDistance =  stats.plannedRunDistance + anArray[i].targetValue;\n                if(resultArray.result !== \"none\" || resultArray[i].completed){\n                    stats.totalRunDistance = stats.totalRunDistance + resultArray[i].value;\n                }\n            }\n            else{\n                \n            }\n            \n        }\n        else if(anArray[i].targetUnit === 's' || anArray[i].targetUnit === 'min' ){\n            if(resultArray.result !== \"none\" || resultArray[i].completed){\n                if(sport === 'Bike'){\n                    stats.totalBikeDistance = stats.totalBikeDistance + resultArray[i].value;\n                }\n                else if(sport === 'Swim'){\n                    stats.totalSwimDistance = stats.totalSwimDistance + resultArray[i].value;\n                }\n                else if(sport === 'Run'){\n                    stats.totalRunDistance = stats.totalRunDistance + resultArray[i].value;\n                }\n                else{\n                    \n                }\n            }\n            \n        }\n        else{\n        \n        }  \n    }   \n}\n\n\n\nvar drawElevationGraph = function(data, distance, calculatePoints){\n    console.log(data);\n    \n    //var data = array.\n    \n    document.getElementById(\"elevationGraph\").innerHTML = \"\";\n    \n    var barWidth = 1;\n    var height = 75;\n    var width = 400;\n    var delta = d3.max(data) - d3.min(data) + 10; //10 is a basic padding\n    \n    var chart = d3.select(\"#elevationGraph\").append(\"svg\")\n     .attr(\"class\", \"chart\")\n     .attr(\"width\", 480)\n     .attr(\"height\", 85);\n    \n    var x = d3.scale.linear()\n     .domain([0, data.length]);\n\n     \n    var y = d3.scale.linear()\n     .domain([0 , d3.max(data)])\n     .range([10, height]);\n     \n    /* \n    chart.selectAll(\"rect\")\n     .data(data)\n    .enter().append(\"rect\")\n     .attr(\"y\", function(d){ return 75 - y(d);})\n     .attr(\"width\", 2)\n     .attr(\"x\", function(d, i) { return (i * 2) + 15; })\n     .attr(\"fill\", \"#84C74D\")\n     .attr(\"height\", function(d){ return y(d); })*/\n     \n    chart.selectAll(\"line\")\n     .data(data)\n    .enter().append(\"line\")\n     .attr(\"y1\", function(d){ return 75 - y(d);})\n     .attr(\"y2\", 75)\n     .attr(\"x1\", function(d, i) { return (i); })\n     .attr(\"x2\", function(d, i) { return (i); })\n     .style(\"stroke\", \"#84C74D\")\n     .on(\"mouseover\", function(d, i){  \n         //$('#elevationBubble').text('Trigger started');\n         var displayVar = \"Elevation of \" + Math.round(d) + \" m <br>Distance of \" + Math.round(((i/calculatePoints)*distance)*100)/100 + \" km\" \n         $(\"#elevationGraph\").qtip('option', 'content.text', displayVar)\n         /*$('#elevationGraph').qtip({\n            \n            show: true\n         });*/\n      })\n\t .on(\"mouseout\", function(){\n\n         //$('#elevationGraph').qtip({show: false });\n     });\n     \n    /* \n    chart.selectAll(\".rule\")\n     .data(y.ticks(2))\n    .enter().append(\"text\")\n     .attr(\"class\", \"rule\")\n     .attr(\"x\", 0)\n     .attr(\"y\", function(d){ return y(d) })\n     .attr(\"dx\", 6)\n     .attr(\"text-anchor\", \"middle\")\n     .text(function(d){ return d3.max(0) - d });\n     \n    chart.selectAll(\"line\")\n     .data(y.ticks(2))\n    .enter().append(\"line\")\n     .attr(\"x1\", 10)\n     .attr(\"x2\", 480)\n     .attr(\"y1\", y)\n     .attr(\"y2\", y)\n     .style(\"stroke\", \"#FFFFFF\");*/\n\n}\n\nvar elevationArrayToArray = function(elevationArray){\n\n    var toReturn = [];\n    for(i=0; i < elevationArray.length;i++){\n       toReturn.push(elevationArray[i].elevation); \n    }\n    return toReturn;\n    \n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":17790}]],"length":17790,"saved":false}
{"contributors":[],"silentsave":false,"ts":1340589000116,"patch":[[{"diffs":[[0," if("],[1,"typeof("],[0,"newArray"],[-1,".length === 0"],[1,") !== 'array'"],[0,"){\n "]],"start1":2037,"start2":2037,"length1":29,"length2":36}]],"length":17797,"saved":false}
{"ts":1340589094068,"patch":[[{"diffs":[[0,"Array){\n        "],[-1,"//"],[0,"console.log(newA"]],"start1":1989,"start2":1989,"length1":34,"length2":32},{"diffs":[[0,"ole.log("],[1,"typeof("],[0,"newArray"]],"start1":2009,"start2":2009,"length1":16,"length2":23},{"diffs":[[0,"ewArray)"],[1,")"],[0,";\n      "]],"start1":2025,"start2":2025,"length1":16,"length2":17}]],"length":17803,"saved":false}
{"ts":1340589158356,"patch":[[{"diffs":[[0,"Array){\n        "],[1,"//"],[0,"console.log(type"]],"start1":1989,"start2":1989,"length1":32,"length2":34},{"diffs":[[0," if("],[-1,"typeof("],[0,"newArray"],[-1,") !== 'a"],[1," instanceof A"],[0,"rray"],[-1,"'"],[0,"){\n "]],"start1":2045,"start2":2045,"length1":36,"length2":33}]],"length":17802,"saved":false}
{"ts":1340589205462,"patch":[[{"diffs":[[0,"     if("],[1,"!"],[0,"newArray"]],"start1":2041,"start2":2041,"length1":16,"length2":17}]],"length":17803,"saved":false}
{"ts":1340589242993,"patch":[[{"diffs":[[0,"    if(!"],[1,"("],[0,"newArray"]],"start1":2042,"start2":2042,"length1":16,"length2":17},{"diffs":[[0,"nceof Array)"],[1,")"],[0,"{\n          "]],"start1":2065,"start2":2065,"length1":24,"length2":25}]],"length":17805,"saved":false}
{"ts":1340589291721,"patch":[[{"diffs":[[0,"Array){\n        "],[-1,"//"],[0,"console.log(type"]],"start1":1989,"start2":1989,"length1":34,"length2":32},{"diffs":[[0,"log("],[-1,"typeof("],[0,"newA"]],"start1":2013,"start2":2013,"length1":15,"length2":8},{"diffs":[[0,"ewArray)"],[-1,")"],[0,";\n      "]],"start1":2018,"start2":2018,"length1":17,"length2":16}]],"length":17795,"saved":false}
{"ts":1340589355891,"patch":[[{"diffs":[[0,"lback){\n    "],[1,"console.log(arrayOfEvents);"],[0,"\n    var res"]],"start1":432,"start2":432,"length1":24,"length2":51}]],"length":17822,"saved":false}
{"ts":1340589362730,"patch":[[{"diffs":[[0,"Array){\n        "],[1,"//"],[0,"console.log(newA"]],"start1":2016,"start2":2016,"length1":32,"length2":34}]],"length":17824,"saved":false}
{"ts":1340589456350,"patch":[[{"diffs":[[0,"ce){\n \n "],[1,"   console.log(eventSource)"],[0,"\n    get"]],"start1":1956,"start2":1956,"length1":16,"length2":43}]],"length":17851,"saved":false}
{"ts":1340589460777,"patch":[[{"diffs":[[0,"lback){\n    "],[1,"//"],[0,"console.log("]],"start1":432,"start2":432,"length1":24,"length2":26}]],"length":17853,"saved":false}
{"ts":1340589558503,"patch":[[{"diffs":[[0," \n      "],[-1,"//"],[0,"array: ["]],"start1":500,"start2":500,"length1":18,"length2":16},{"diffs":[[0," };\n"],[-1,"    response.array = new Array();\n"],[0,"    "]],"start1":604,"start2":604,"length1":42,"length2":8}]],"length":17817,"saved":false}
{"ts":1340589675335,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(eventSource)"],[0,"\n   "]],"start1":1929,"start2":1929,"length1":32,"length2":8},{"diffs":[[0," if("],[-1,"!("],[0,"newA"]],"start1":2033,"start2":2033,"length1":10,"length2":8},{"diffs":[[0,"ray "],[-1,"instanceof Array)"],[1,"=== \"Error\""],[0,"){\n "]],"start1":2042,"start2":2042,"length1":25,"length2":19}]],"length":17785,"saved":false}
{"ts":1340589771359,"patch":[[{"diffs":[[0,"    "],[-1,"getIdsFromEventSource(eventSource, function(newArray){\n        //console.log(newArray);\n        if(newArray"],[1,"if(eventSource"],[0," ==="]],"start1":1934,"start2":1934,"length1":115,"length2":22},{"diffs":[[0,"onth');\n    "],[1,"}\n"],[0,"    "],[-1,"}"],[1,"else{"],[0,"\n        els"]],"start1":2030,"start2":2030,"length1":29,"length2":35},{"diffs":[[0,"  else{\n        "],[-1,"else"],[1,"getIdsFromEventSource(eventSource, function(newArray)"],[0,"{\n            ge"]],"start1":2046,"start2":2046,"length1":36,"length2":85},{"diffs":[[0,"        "],[-1,"}"],[0,"\n"],[1,"    "],[0,"    });\n"],[1,"    }\n"],[0,"}\n\nStrin"]],"start1":3361,"start2":3361,"length1":26,"length2":35}]],"length":17756,"saved":false}
